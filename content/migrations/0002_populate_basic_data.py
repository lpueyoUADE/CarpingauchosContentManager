# Generated by Django 5.2.4 on 2025-08-06 21:49

from django.db import migrations
rarities = [
    {
        'identifier': 'Common',
        'key': 'rarity_common',
        'rarity_json_id': 0,
        'color_start': '#FFFFFF',
        'color_end': '#FFFFFF',
        'localization_identifier': 'rarity_common_name',
        'localization_key': 'loc_rarity_common_name',
        'localization_english': 'Common',
        'localization_spanish': 'Común',
    },
    {
        'identifier': 'Uncommon',
        'key': 'rarity_uncommon',
        'rarity_json_id': 1,
        'color_start': '#33FF44',
        'color_end': '#33FF44',
        'localization_identifier': 'rarity_uncommon_name',
        'localization_key': 'loc_rarity_uncommon_name',
        'localization_english': 'Uncommon',
        'localization_spanish': 'Poco Común',
    },
    {
        'identifier': 'Rare',
        'key': 'rarity_rare',
        'rarity_json_id': 2,
        'color_start': '#3399FF',
        'color_end': '#3399FF',
        'localization_identifier': 'rarity_rare_name',
        'localization_key': 'loc_rarity_rare_name',
        'localization_english': 'Rare',
        'localization_spanish': 'Raro',
    },
    {
        'identifier': 'Epic',
        'key': 'rarity_epic',
        'rarity_json_id': 3,
        'color_start': '#9933FF',
        'color_end': '#9933FF',
        'localization_identifier': 'rarity_epic_name',
        'localization_key': 'loc_rarity_epic_name',
        'localization_english': 'Epic',
        'localization_spanish': 'Épico',
    },
    {
        'identifier': 'Legendary',
        'key': 'rarity_legendary',
        'rarity_json_id': 4,
        'color_start': '#FFAA00',
        'color_end': '#FFAA00',
        'localization_identifier': 'rarity_legendary_name',
        'localization_key': 'loc_rarity_legendary_name',
        'localization_english': 'Legendary',
        'localization_spanish': 'Legendario',
    },
]
weapon_types = [
    {
        'identifier': 'Sword',
        'key': 'weapon_type_sword',
        'localization_identifier': 'weapon_type_sword_name',
        'localization_key': 'loc_weapon_type_sword_name',
        'localization_english': 'Sword',
        'localization_spanish': 'Espada',
    },
    {
        'identifier': 'Knife',
        'key': 'weapon_type_knife',
        'localization_identifier': 'weapon_type_knife_name',
        'localization_key': 'loc_weapon_type_knife_name',
        'localization_english': 'Knife',
        'localization_spanish': 'Cuchillo',
    },
    {
        'identifier': 'Long Knife',
        'key': 'weapon_type_long_knife',
        'localization_identifier': 'weapon_type_long_knife_name',
        'localization_key': 'loc_weapon_type_long_knife_name',
        'localization_english': 'Long Knife',
        'localization_spanish': 'Cuchillo Largo',
    },
    {
        'identifier': 'Machete',
        'key': 'weapon_type_machete',
        'localization_identifier': 'weapon_type_machete_name',
        'localization_key': 'loc_weapon_type_machete_name',
        'localization_english': 'Machete',
        'localization_spanish': 'Machete',
    },
]
damage_types = [
    {
        'identifier': 'None',
        'key': 'damage_type_none',
        'damage_type_id': 0,
        'localization_identifier': 'damage_type_none_name',
        'localization_key': 'loc_damage_type_none_name',
        'localization_english': 'None',
        'localization_spanish': 'Nulo',
    },
    {
        'identifier': 'Stand',
        'key': 'damage_type_stand',
        'damage_type_id': 1,
        'localization_identifier': 'damage_type_stand_name',
        'localization_key': 'loc_damage_type_stand_name',
        'localization_english': 'Stand',
        'localization_spanish': 'Parado',
    },
    {
        'identifier': 'Face Up',
        'key': 'damage_type_face_up',
        'damage_type_id': 2,
        'localization_identifier': 'damage_type_face_up_name',
        'localization_key': 'loc_damage_type_face_up_name',
        'localization_english': 'Face Up',
        'localization_spanish': 'Cara Arriba',
    },
    {
        'identifier': 'Face Down',
        'key': 'damage_type_face_down',
        'damage_type_id': 3,
        'localization_identifier': 'damage_type_face_down_name',
        'localization_key': 'loc_damage_type_face_down_name',
        'localization_english': 'Face Down',
        'localization_spanish': 'Cara Abajo',
    },
]
equipment_types = [
    {
        'identifier': 'Head',
        'key': 'equipment_type_head',
        'part_id': 1,
        'localization_identifier': 'equipment_type_head_name',
        'localization_key': 'loc_equipment_type_head_name',
        'localization_english': 'Head',
        'localization_spanish': 'Cabeza',
    },
    {
        'identifier': 'Chest',
        'key': 'equipment_type_chest',
        'part_id': 2,
        'localization_identifier': 'equipment_type_chest_name',
        'localization_key': 'loc_equipment_type_chest_name',
        'localization_english': 'Chest',
        'localization_spanish': 'Pecho',
    },
    {
        'identifier': 'Arms',
        'key': 'equipment_type_arms',
        'part_id': 3,
        'localization_identifier': 'equipment_type_arms_name',
        'localization_key': 'loc_equipment_type_arms_name',
        'localization_english': 'Arms',
        'localization_spanish': 'Brazos',
    },
    {
        'identifier': 'Legs',
        'key': 'equipment_type_legs',
        'part_id': 4,
        'localization_identifier': 'equipment_type_legs_name',
        'localization_key': 'loc_equipment_type_legs_name',
        'localization_english': 'Legs',
        'localization_spanish': 'Piernas',
    },
]

ability_types = [
    {
        'identifier': 'None',
        'key': 'abilitytype_none',
        'localization_identifier': 'abilitytype_none_name',
        'localization_key': 'loc_abilitytype_none_name',
        'localization_english': 'None',
        'localization_spanish': 'Nulo',
    },
    {
        'identifier': 'Active',
        'key': 'abilitytype_active',
        'localization_identifier': 'abilitytype_active_name',
        'localization_key': 'loc_abilitytype_active_name',
        'localization_english': 'Active',
        'localization_spanish': 'Activo',
    },
    {
        'identifier': 'Passive',
        'key': 'abilitytype_passive',
        'localization_identifier': 'abilitytype_passive_name',
        'localization_key': 'loc_abilitytype_passive_name',
        'localization_english': 'Passive',
        'localization_spanish': 'Pasivo',
    },
    {
        'identifier': 'Transformation',
        'key': 'abilitytype_transformation',
        'localization_identifier': 'abilitytype_transformation_name',
        'localization_key': 'loc_abilitytype_transformation_name',
        'localization_english': 'Transformation',
        'localization_spanish': 'Transformacion',
    },
]

attack_sequences = [
    {'identifier': 'Sword_Swing_01', 'key': 'attack_sequence_sword_swing_01'},
    {'identifier': 'Sword_Swing_02', 'key': 'attack_sequence_sword_swing_02'},
    {'identifier': 'Sword_Swing_03', 'key': 'attack_sequence_sword_swing_03'},
    {'identifier': 'Sword_Swing_04', 'key': 'attack_sequence_sword_swing_04'},
    {'identifier': 'Sword_Swing_05', 'key': 'attack_sequence_sword_swing_05'},
    {'identifier': 'Sword_Swing_06', 'key': 'attack_sequence_sword_swing_06'},
    {'identifier': 'Sword_Swing_07', 'key': 'attack_sequence_sword_swing_07'},
    {'identifier': 'Sword_Swing_08', 'key': 'attack_sequence_sword_swing_08'},
    {'identifier': 'Sword_Swing_09', 'key': 'attack_sequence_sword_swing_09'},
    {'identifier': 'Sword_Swing_10', 'key': 'attack_sequence_sword_swing_10'},
    {'identifier': 'Melee_Punch_01', 'key': 'attack_sequence_melee_punch_01'},
    {'identifier': 'Melee_Punch_02', 'key': 'attack_sequence_melee_punch_02'},
    {'identifier': 'Melee_Punch_03', 'key': 'attack_sequence_melee_punch_03'},
    {'identifier': 'Melee_Punch_04', 'key': 'attack_sequence_melee_punch_04'},
    {'identifier': 'Melee_Punch_05', 'key': 'attack_sequence_melee_punch_05'},
    {'identifier': 'Melee_Punch_06', 'key': 'attack_sequence_melee_punch_06'},
    {'identifier': 'Melee_Punch_07', 'key': 'attack_sequence_melee_punch_07'},
    {'identifier': 'Melee_Punch_08', 'key': 'attack_sequence_melee_punch_08'},
    {'identifier': 'Melee_Punch_09', 'key': 'attack_sequence_melee_punch_09'},
    {'identifier': 'Melee_Punch_10', 'key': 'attack_sequence_melee_punch_10'},
    {'identifier': 'Melee_Kick_01',  'key': 'attack_sequence_melee_kick_01'},
    {'identifier': 'Melee_Kick_02',  'key': 'attack_sequence_melee_kick_02'},
    {'identifier': 'Melee_Kick_03',  'key': 'attack_sequence_melee_kick_03'},
    {'identifier': 'Melee_Kick_04',  'key': 'attack_sequence_melee_kick_04'},
    {'identifier': 'Melee_Kick_05',  'key': 'attack_sequence_melee_kick_05'},
    {'identifier': 'Melee_Kick_06',  'key': 'attack_sequence_melee_kick_06'},
    {'identifier': 'Melee_Kick_07',  'key': 'attack_sequence_melee_kick_07'},
    {'identifier': 'Melee_Kick_08',  'key': 'attack_sequence_melee_kick_08'},
    {'identifier': 'Melee_Kick_09',  'key': 'attack_sequence_melee_kick_09'},
    {'identifier': 'Melee_Kick_10',  'key': 'attack_sequence_melee_kick_10'},
]

def localization_forwards(apps, schema_editor):
    Localization = apps.get_model('content', 'Localization')

    # Rarity
    for r in rarities:
        Localization.objects.create(
            identifier=r['localization_identifier'],
            key=r['localization_key'],
            english=r['localization_english'],
            spanish=r['localization_spanish']
        )

    # weapon_type
    for wt in weapon_types:
        Localization.objects.create(
            identifier=wt['localization_identifier'],
            key=wt['localization_key'],
            english=wt['localization_english'],
            spanish=wt['localization_spanish']
        )

    # damage_type
    for dt in damage_types:
        Localization.objects.create(
            identifier=dt['localization_identifier'],
            key=dt['localization_key'],
            english=dt['localization_english'],
            spanish=dt['localization_spanish']
        )

    # equipment_type
    for et in equipment_types:
        Localization.objects.create(
            identifier=et['localization_identifier'],
            key=et['localization_key'],
            english=et['localization_english'],
            spanish=et['localization_spanish']
        )

    # ability_type
    for at in ability_types:
        Localization.objects.create(
            identifier=at['localization_identifier'],
            key=at['localization_key'],
            english=at['localization_english'],
            spanish=at['localization_spanish']
        )

def localization_reverse(apps, schema_editor):
    Localization = apps.get_model('content', 'Localization')
    Localization.objects.all().delete()

def rarity_forwards(apps, schema_editor):
    Rarity = apps.get_model('content', 'Rarity')
    Localization = apps.get_model('content', 'Localization')

    for r in rarities:
        Rarity.objects.create(
            identifier=r['identifier'],
            key=r['key'],
            rarity_json_id=r['rarity_json_id'],
            color_start=r['color_start'],
            color_end=r['color_end'],
            name=Localization.objects.get(key=r['localization_key']),
        )

def rarity_reverse(apps, schema_editor):    
    Rarity = apps.get_model('content', 'Rarity')
    Rarity.objects.all().delete()
    

def weapon_type_forwards(apps, schema_editor):
    WeaponType = apps.get_model('content', 'WeaponType')
    Localization = apps.get_model('content', 'Localization')

    for wt in weapon_types:
        WeaponType.objects.create(
            identifier=wt['identifier'],
            key=wt['key'],
            name=Localization.objects.get(key=wt['localization_key']),
        )

def weapon_type_reverse(apps, schema_editor):    
    WeaponType = apps.get_model('content', 'WeaponType')
    WeaponType.objects.all().delete()

def damage_type_forwards(apps, schema_editor):
    DamageType = apps.get_model('content', 'DamageType')
    Localization = apps.get_model('content', 'Localization')

    for dt in damage_types:
        DamageType.objects.create(
            identifier=dt['identifier'],
            key=dt['key'],
            damage_type_id=dt['damage_type_id'],
            name=Localization.objects.get(key=dt['localization_key']),
        )

def damage_type_reverse(apps, schema_editor):    
    DamageType = apps.get_model('content', 'DamageType')
    DamageType.objects.all().delete()

def equipment_type_forwards(apps, schema_editor):
    EquipmentType = apps.get_model('content', 'EquipmentType')
    Localization = apps.get_model('content', 'Localization')

    for et in equipment_types:
        EquipmentType.objects.create(
            identifier=et['identifier'],
            key=et['key'],
            part_id=et['part_id'],
            name=Localization.objects.get(key=et['localization_key']),
        )

def equipment_type_reverse(apps, schema_editor):    
    EquipmentType = apps.get_model('content', 'EquipmentType')
    Item = apps.get_model('content', 'Item')
    Item.objects.all().delete()
    
    EquipmentType.objects.all().delete()

def ability_type_forwards(apps, schema_editor):
    AbilityType = apps.get_model('content', 'AbilityType')
    Localization = apps.get_model('content', 'Localization')

    for et in ability_types:
        AbilityType.objects.create(
            identifier=et['identifier'],
            key=et['key'],
            name=Localization.objects.get(key=et['localization_key']),
        )

def ability_type_reverse(apps, schema_editor):    
    AbilityType = apps.get_model('content', 'AbilityType')   
    Ability = apps.get_model('content', 'Ability') 
    
    Ability.objects.all().delete()
    AbilityType.objects.all().delete()

def attack_sequence_forwards(apps, schema_editor):
    AttackSequence = apps.get_model('content', 'AttackSequence')

    for ats in attack_sequences:
        AttackSequence.objects.create(
            identifier=ats['identifier'],
            key=ats['key'],
        )

def attack_sequence_reverse(apps, schema_editor):    
    AttackSequence = apps.get_model('content', 'AttackSequence')
    AttackSequence.objects.all.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('content', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(localization_forwards, localization_reverse),
        migrations.RunPython(rarity_forwards, rarity_reverse),
        migrations.RunPython(weapon_type_forwards, weapon_type_reverse),
        migrations.RunPython(damage_type_forwards, damage_type_reverse),
        migrations.RunPython(equipment_type_forwards, equipment_type_reverse),
        migrations.RunPython(ability_type_forwards, ability_type_reverse),
        migrations.RunPython(attack_sequence_forwards, attack_sequence_reverse),
    ]
